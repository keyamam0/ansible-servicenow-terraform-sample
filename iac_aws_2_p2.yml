#
# EC2 Config
#
- hosts: tag_myGroup_{{ my_tf_key }}
  remote_user: ec2-user
  become: yes
  gather_facts: no
  tasks:
    - name: Wait for SSH connection
      ansible.builtin.wait_for_connection:

    - name: Gather fact
      ansible.builtin.setup:

    - name: httpd Install
      ansible.builtin.dnf:
        name: httpd
        state: present

    - name: httpd Launch
      ansible.builtin.systemd:
        name: httpd.service
        enabled: yes
        state: started

    - name: Temp password Create
      set_fact:
        random_password: "{{ lookup('community.general.random_string', length=12, charset='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@') }}"

    - name: Temp password Set
      user:
        name: "hatdemo"
        state: present
        createhome: yes
        shell: /bin/bash
        password: "{{ random_password | password_hash('sha512') }}"
        update_password: always

    - name: SSHD Config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        backrefs: yes
      with_items:
        - { regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication yes' }
        - { regexp: '^#?ClientAliveInterval', line: 'ClientAliveInterval 120' }
        - { regexp: '^#?ClientAliveCountMax', line: 'ClientAliveInterval 3' }

    - name: SSHD Restart
      service:
        name: sshd
        state: restarted

    - name: Temp password Set expiration
      shell: chage -d 0 hatdemo

#
# Notification
#
- hosts: localhost
  gather_facts: false

  tasks:
    - name: Send message
      slack:
        token: "{{ slack_token }}"
        channel: "{{ slack_channel }}"
        msg: |
          Ansible Automation Platformより
          以下のSandbox環境の準備が完了しました

    - name: Send message
      slack:
        token: "{{ slack_token }}"
        channel: "{{ slack_channel }}"
        msg: | 
          >{{ item }} 
          >{{ hostvars[item].random_password }}
      loop: "{{ groups['tag_myGroup_' + my_tf_key] }}"
      vars:
        item: "{{ inventory_hostname }}"